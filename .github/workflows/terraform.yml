name: "Terraform Apply"

on:
  push:
    branches:
      - main  # Executa quando h√° um push na branch main
  workflow_dispatch:  # Permite rodar manualmente via GitHub Actions
    inputs:
      approve:
        description: 'Approve the Terraform apply?'
        required: true
        type: choice
        options:
          - yes
          - no

permissions:
  contents: read

jobs:
  terraform:
    name: "Deploy Infra via Terraform + Terragrunt"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Check if Terraform is a directory
        run: |
          if [ -d "/usr/local/bin/terraform" ]; then
            echo "Terraform is a directory. Removing..."
            sudo rm -rf /usr/local/bin/terraform
          fi 
      
      - name: Force remove old Terraform
        run: |
          sudo pkill -f terraform || true
          sudo rm -rf /usr/local/bin/terraform
        

      - name: Install Terraform
        run: |
          mkdir -p ~/terraform_install
          cd ~/terraform_install
          wget -q https://releases.hashicorp.com/terraform/1.10.5/terraform_1.10.5_linux_amd64.zip
          unzip -o terraform_1.10.5_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Install AWS CLI
        run: pip install awscli
        
      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Ajuste para sua regi√£o

      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version

      - name: Inicializar Terraform/Terragrunt
        working-directory: terraform
        run: |
          terragrunt init

      - name: Validar Terraform
        working-directory: terraform
        run: |
          terragrunt validate

      - name: Gerar plano de execu√ß√£o (terraform plan)
        working-directory: terraform
        run: |
          terragrunt plan -out=tfplan

      - name: Verificar aprova√ß√£o para Apply
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.approve == 'yes'
        working-directory: terraform
        run: |
          echo "üöÄ Terraform Plan gerado com sucesso!"
          echo "‚úÖ Aprova√ß√£o recebida. Continuando com Terraform Apply..."
          terragrunt apply -auto-approve

      - name: Cancelar Apply se n√£o aprovado
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.approve == 'no'
        run: |
          echo "‚ùå Deploy cancelado pelo usu√°rio."
          exit 1

      - name: Pular Apply em execu√ß√µes autom√°ticas
        if: github.event_name != 'workflow_dispatch'
        run: |
          echo "‚ö†Ô∏è Execu√ß√£o autom√°tica detectada. O Apply n√£o ser√° executado."
          echo "‚ÑπÔ∏è Para executar o Apply, acione o workflow manualmente com 'approve: yes'."